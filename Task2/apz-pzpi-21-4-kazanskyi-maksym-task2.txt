1 ОПИС АРХІТЕКТУРИ СИСТЕМИ

Архітектура системи складається з: серверної, мобільної, IoT та веб частин. Основне функціональне призначення базується на взаємодії IoT та мобільної складових. Також береться до уваги процес адміністрування, переважно виділені для веб складової.

2 ПОБУДОВА ДІАГРАМИ РОЗГОРТАННЯ

Діаграма розгортання демонструє взаємозв’язок всіх складових програмної системи. В особистості, покладання всіх складових саме на серверну. Навіть безпосередня взаємодія між IoT та Mobile базується на контрольній відповіді сервера. Опосередковано стоїть пряма ланка між сервером та веб складовою. На рисунку 1 графічно наведено взаємозв’язки складових програмної системи.

3 ОПИС АРХІТЕКТУРИ СЕРВЕРНОЇ ЧАСТИНИ

Архітектура серверної частини базується на використанні фреймворку ASP.NET Core та написанням на мові програмування C#. PostgreSQL слугує СУБД. На неї покладаються всі елементи програмної системи. В особистості, для втілення веб складової передбачається використання фреймворку Razor Pages. Для інших елементів (Mobile, IoT) зв’язок із сервером підтримується зазначеною далі, специфікацією REST.

4 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Для обраної програмної системи є цільовими три актора взаємодії: Адміністратор, Секретар та Працівник. Адміністратору передбачені всі привілеї керування системою (отримання звітів, налаштування системи, встановлення дозволів іншим) та діагностики за посередництвом веб складової. Секретарем виступає певна відповідальна особа, уповноважена отримувати певні звіти від системи використовуючи веб. Працівник задіяний, цілком через мобільну складову, проходити процес аутентифікації та надавати дозволи нижчого рівня іншим людям, для виділеної зони відповідальності. На рисунку 2 наведено взаємодії цих акторів з елементами програмної системи.

5 ПОБУДОВА ER-ДІАГРАМИ

Для функціонування програмної системи необхідна СУБД. Склад таблиць (сутностей, рис. 3):
•	Person – сутність, що відображає фізичну особу в системі. Має такі властивості, як: Прізвище, Ім’я, По батькові, Пошта. Мінімальна необхідна інформація для ідентифікації та зв’язку;
•	Account – сутність, що відображає користувача, прив’язаного до фізичної особи, у системі. Має такі властивості, як: Логін, Пароль, Остання сесія. Перші два поля необхідні для авторизації у системі. Останнє – позначає час останньої сесії у цілях безпеки;
•	Permissions – сутність, що зберігає у собі перелік дозволів. З наборів цих дозволів, складаються три, раніше описані, актори. Має такі властивості, як: Надання прав, Отримання звіту, Встановлення прав, Налаштування системи;
•	AccessDevice – сутність, що відображає IoT пристрій. Має такі властивості, як: Назва області. Властивість показує назву виділеної зони управління доступу.
•	Access – сутність, що відображає надання доступу до обраного пристрою. Має такі властивості, як: Надавач, Отримувач, Пристрій, Час створення, Час спливання дозволу.
•	Interaction – сутність, що відображає акт взаємодії між Mobile та IoT складовими. Має такі властивості, як: Доступ, Позначка часу, Результат. Перша властивість посилається на попередню сутність права наданого права доступу. Остання показує результат взаємодії, який може бути і невдалим.

6 СПЕЦИФІКАЦІЯ REST

Як згадувалося раніше, робота Mobile та IoT складових цілком базується на взаємодії з REST. Тому, зважаючи на обрану платформу, використовується специфікація OAS (OpenAPI, Swagger). Детальніше, про методи взаємодії, описано у ДОДАТКУ А.

7 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ

Також, не менш важливим, є опис основної частини функціонування системи. Схема розподілена на три потоки обробки: IoT-Mobile, Server-Mobile та  Server-Web. Перший ілюструє роботу взаємодії між, власне, IoT та Mobile. Процес очікування переривається взаємодією, після чого перевіряється токен телефону. Другий – між Server та Mobile, перевіряючи наявність прострочених токенів, та поновлюючи їх на обох кінцях. Процес оновлення може бути ініційованим і першим потоком. Третій потік, по суті, запускає процес оновлення у другому, після оновлення системних відомостей про користувача. Діаграма описана на рисунку 4.

ВИСНОВКИ

У ході виконання роботи була описана розробка серверної частини обраної програмної системи.

ДОДАТОК А
Специфікація REST

Контролер доступу
GET /api/access - Отримує всі доступи.
GET /api/access/{id} - Отримує конкретний доступ за ID.
POST /api/access - Додає новий доступ.
PUT /api/access/{id} - Оновлює існуючий доступ за ID.
DELETE /api/access/{id} - Видаляє доступ за ID.
Контролер пристроїв доступу
GET /api/accessdevice - Отримує всі пристрої доступу.
GET /api/accessdevice/{id} - Отримує конкретний пристрій доступу за ID.
POST /api/accessdevice - Додає новий пристрій доступу.
PUT /api/accessdevice/{id} - Оновлює існуючий пристрій доступу за ID.
DELETE /api/accessdevice/{id} - Видаляє пристрій доступу за ID.
Контролер токенів доступу
GET /api/accesstoken - Отримує всі токени доступу.
GET /api/accesstoken/{id} - Отримує конкретний токен доступу за ID.
POST /api/accesstoken - Додає новий токен доступу.
PUT /api/accesstoken - Оновлює токен доступу, що належить викликачу.
PUT /api/accesstoken/{id} - Оновлює конкретний токен доступу за ID.
DELETE /api/accesstoken/{id} - Видаляє токен доступу за ID.
Контролер акаунтів
GET /api/account - Отримує всі акаунти.
GET /api/account/{id} - Отримує конкретний акаунт за ID.
GET /api/account/me - Отримує акаунт поточного користувача.
POST /api/account - Додає новий акаунт.
PUT /api/account/{id} - Оновлює існуючий акаунт за ID.
DELETE /api/account/{id} - Видаляє акаунт за ID.
Контролер взаємодій
GET /api/interaction - Отримує всі взаємодії.
GET /api/interaction/{id} - Отримує конкретну взаємодію за ID.
GET /api/interaction/user/{user_id} - Отримує всі взаємодії для конкретного користувача.
POST /api/interaction - Реєструє нову взаємодію.
Контролер дозволів
GET /api/permission/{id} - Отримує дозволи для конкретного акаунту за ID.
POST /api/permission/{id} - Створює новий дозвіл для акаунту.
DELETE /api/permission/{id} - Видаляє дозвіл з акаунту.
Контролер осіб
GET /api/person - Отримує всіх осіб.
GET /api/person/{id} - Отримує конкретну особу за ID.
GET /api/person/me - Отримує особу, асоційовану з акаунтом поточного користувача.
POST /api/person - Додає нову особу.
PUT /api/person/{id} - Оновлює існуючу особу за ID.
DELETE /api/person/{id} - Видаляє особу за ID.
Контролер звітів
GET /api/reports/persons - Отримує звіт про осіб.
GET /api/reports/accounts - Отримує звіт про акаунти.
GET /api/reports/access_devices - Отримує звіт про пристрої доступу.
GET /api/reports/access_tokens - Отримує звіт про токени доступу.
GET /api/reports/accesses - Отримує звіт про доступи.
GET /api/reports/interactions - Отримує звіт про взаємодії.
GET /api/reports/permissions - Отримує звіт про дозволи.
